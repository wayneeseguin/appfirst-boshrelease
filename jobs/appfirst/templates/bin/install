#!/bin/bash
source /var/vcap/jobs/appfirst/shell/env

echo "Installing and configuring appfirst for ${arch}... from ${pkgPath}"

if [[ -x ${pkgPath}/libwrap.so.1.0.1 ]]
then echo "AppFirst is already installed." ; exit 0
fi

mkdir -p ${pkgPath}

# Find the system install command.
install=$(PATH="/sbin:/bin:/usr/sbin:/usr/bin" which install)

for file in ${pkgPath}/lib/libwrap.so.1.0.1
do ${install} -m 0555 -T ${file} ${wrapPath}/${file##*/}
done ; chmod 0555 ${wrapPath}/libwrap.so.1.0.1

# Add to system LD_LIBRARY_PATH
echo "${wrapPath}" > ${jobPath}/etc/af.ld.so.conf 
${install} -m 0755 -T ${jobPath}/etc/af.ld.so.conf /etc/ld.so.conf.d/afcollector.conf
ldconfig -v > ${logPath}/ldconfig.log 2>&1

# Whitelist AppFirst Collector within AppArmor
appArmorFile="/etc/apparmor.d/abstractions/base"
if [[ -s ${appArmorFile} ]]
then
  if ! grep -q -w "AppFirst" ${appArmorFile}
  then
  {
    cat >> ${appArmorFile} <<EOF
# AppFirst
/etc/AppFirst r,    # AppFirst
${configFile} r,    # AppFirst
${wrapPath}/libwrap.so.1.0.1 mr,    # AppFirst
/dev/shm/ld_preload mr,    # AppFirst
/run/shm/ld_preload mr,    # AppFirst
/proc/*/stat mr,    # AppFirst
EOF
  if [[ -x /usr/sbin/invoke-rc.d  ]]
  then /usr/sbin/invoke-rc.d apparmor reload
  fi # TODO: Is there any other mechanism by which apparmor would be reloaded?
  }
  fi
fi # TODO: SELinux Flavor, address and test on CentOS stemcells.

# Configure the system for AppFirst
echo "${wrapPath}/libwrap.so.1.0.1" > "${jobPath}/config/AppFirst.ld_preload"

if [[ -s ${configFile} ]]
then collectorId=$(awk '/CollectorID/{print $2}' ${configFile} 2>/dev/null | head -1)
fi

for file in AppFirst.ld_preload
do ${install} -m 0644 -T ${jobPath}/config/${file} /etc/${file}
done

if [[ -n ${collectorId:-} ]] # Preserve Collector ID
then 
	sed -e "/^<\/configuration>/i\   CollectorID ${collectorId}" ${configFile} > ${configFile}.id
	${install} -m 0644 -T ${configFile}.id ${configFile}
else
	${install} -m 0644 -T ${jobPath}/config/AppFirst ${configFile}
fi

cp ${jobPath}/config/AppFirst.proxy ${wrapPath}/AppFirst.proxy

